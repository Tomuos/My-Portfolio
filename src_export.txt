==== ./src/App.css ====
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}
==== ./src/App.js ====
import React from 'react';
import Header from './components/Header';
import Footer from './components/Footer';
import AboutMe from './components/AboutMe';
import Projects from './components/Projects';
import Contact from './components/Contact';
import Galaxy from './components/Galaxy';

function App() {
  return (
    <div className="App">
      <Header />
      <Galaxy />
            <AboutMe />
      <Projects />
      <Contact />
      <Footer />
    </div>
  );
}

export default App;
==== ./src/components/AboutMe.js ====
==== ./src/components/Contact.js ====
==== ./src/components/Footer.js ====
==== ./src/components/Galaxy.js ====
import React, { useEffect, useRef } from 'react';
import * as THREE from 'three';

const Galaxy = () => {
  const galaxyRef = useRef(null);

  useEffect(() => {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);

    if (galaxyRef.current) {
      galaxyRef.current.appendChild(renderer.domElement);
    }

    const geometry = new THREE.BufferGeometry();

    const positions = new Float32Array(2000 * 3);
    for (let i = 0; i < positions.length; i += 3) {
      positions[i] = (Math.random() - 0.5) * 10;
      positions[i + 1] = (Math.random() - 0.5) * 10;
      positions[i + 2] = (Math.random() - 0.5) * 10;
    }
    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));

    const material = new THREE.PointsMaterial({ size: 0.1 });
    const points = new THREE.Points(geometry, material);

    scene.add(points);
    camera.position.z = 5;

    const animate = () => {
      console.log('animate');
      requestAnimationFrame(animate);
      points.rotation.x += 0.005;
      points.rotation.y += 0.005;
      renderer.render(scene, camera);
    };

    animate();
  }, []);

  return <div ref={galaxyRef} />;
};

export default Galaxy;
==== ./src/components/Header.js ====
import React from 'react';
import Galaxy from './Galaxy';

const Header = () => {
  return (
    <header className="relative">
      <Galaxy />
      <div className="absolute top-0 left-0 text-4xl text-white p-4">
        My Portfolio
      </div>
    </header>
  );
};

export default Header;
==== ./src/components/Projects.js ====
==== ./src/index.css ====
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
==== ./src/index.js ====
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


